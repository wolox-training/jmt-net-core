@using TrainingNet.Models.Views
@model MovieGenreViewModel

<table class="table">

    <thead>
        <tr>
                <th>
                    <a asp-action="ListMovies" asp-route-sortOrder="title" asp-route-descending=@(!(bool)ViewData["descending"])>Title</a>
                </th>
                <th>
                    <a asp-action="ListMovies" asp-route-sortOrder="release date" asp-route-descending=@(!(bool)ViewData["descending"])>Release Date</a>
                </th>
                <th>
                    <a asp-action="ListMovies" asp-route-sortOrder="genre" asp-route-descending=@(!(bool)ViewData["descending"])>Genre</a>
                </th>
                <th>
                    <a asp-action="ListMovies" asp-route-sortOrder="price" asp-route-descending=@(!(bool)ViewData["descending"])>Price</a>
                </th>
                <th>
                    <a asp-action="ListMovies" asp-route-sortOrder="rating" asp-route-descending=@(!(bool)ViewData["descending"])>Rating</a>
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Movies) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="EditMovie" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="DeleteMovie" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>

@{
    var prevDisabled = !Model.Movies.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Movies.HasNextPage ? "disabled" : "";
}

<a asp-action="ListMovies"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.Movies.PageIndex - 1)"
   asp-route-currentGenreFilter="@ViewData["CurrentGenreFilter"]"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-descending ="@ViewData["descending"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="ListMovies"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.Movies.PageIndex + 1)"
   asp-route-currentGenreFilter="@ViewData["CurrentGenreFilter"]"
   asp-route-currentTitleFilter="@ViewData["CurrentTitleFilter"]"
   asp-route-descending ="@ViewData["descending"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

</table>
<form asp-action="ListMovies" asp-controller="Movie" method="GET">
    <p>
        Title: <input type="text" name  ="titleSearchString">
    </p>
    <p>
        Genre: @Html.DropDownList("genreSearchString", 
                Model.Genres, 
                "Select Genre")
    </p>
    <input type="submit" value="Filter" />
</form>
