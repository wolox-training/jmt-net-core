@using TrainingNet.Models.Views
@model MovieGenreViewModel

<table class="table">

    <thead>
        <tr>
                <th>
                    Title
                </th>
                <th>
                    Release Date
                </th>
                <th>
                    Genre
                </th>
                <th>
                    Price
                </th>
                <th>
                    Rating
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Rating)
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Movies) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="EditMovie" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="DeleteMovie" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>

</table>
    <form asp-action="ListMovies" asp-controller="Movie" method="GET">
        <p>
            Title: <input type="text" name  ="titleSearchString">
        </p>
        <p>
            Genre: <input type="text" name  ="genreSearchString">
        </p>
        <p>
            Sort by: <input type="text" name ="sortOrder">
        </p>
        <input type="submit" value="Filter" />
</form>
