@using TrainingNet.Models.Views
@model MovieGenreViewModel

<table class="table">

    <thead>
        <tr>
                <th>
                    Title
                </th>
                <th>
                    Release Date
                </th>
                <th>
                    Genre
                </th>
                <th>
                    Price
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Movies) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                <a asp-action="EditMovie" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="DeleteMovie" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
<<<<<<< a467b7a3280be1a2ec87903536609219f169122f

</table>

<form asp-controller="Movie" asp-action="ListMovies" method="get">
    <p>
        Title: <input type="text" name="titleSearchString">
        <select asp-for="MovieGenre" asp-items="Model.Genres" name="genreSearchString">
            <option value="">All</option>
        </select>
        <input type="submit" value="Filter" />
<<<<<<< 46574fe3a9c3ce6165c339bc1cd6b0dfaf64f2d0
    </p>
</form>
=======
    </form>
=======
</table>
>>>>>>> added ListMovies.cshtml
>>>>>>> added ListMovies.cshtml
